plugins {
    id 'java'
}



// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'checkstyle'


group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {

    implementation 'org.slf4j:slf4j-api:1.7.36'

    testImplementation 'org.testng:testng:6.9.10'

    // https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java
    implementation 'org.seleniumhq.selenium:selenium-java:4.21.0'

    testImplementation 'io.github.bonigarcia:webdrivermanager:5.1.0'

}

buildDir = 'build'

test {
    useTestNG() {
        useDefaultListeners = true // generates the test report
        suites "src/test/resources/testng.xml"
    }

    afterSuite { desc, result ->
            if (!desc.parent) {
                println "\nTEST RESULT: ${result.resultType}"
                println "TEST SUMMARY: RAN ${result.testCount} TESTS, " +
                        "${result.successfulTestCount} SUCCEEDED, " +
                        "${result.failedTestCount} FAILED, " +
                        "${result.skippedTestCount} SKIPPED"
            }
    }

    testLogging {
		events "PASSED", "SKIPPED", "FAILED", "STANDARD_OUT", "STANDARD_ERROR"
        exceptionFormat = 'full'

        // Optionally do:
        showStackTraces = true
	}

    testLogging.showStandardStreams = true
    test.outputs.upToDateWhen {false}

}

mainClassName = 'demo.App'

// checkstyle {
//     toolVersion = '8.45' // Check for the latest version compatible with your setup
//     config = rootProject.resources.text.fromFile('__CRIO__/checkstyle.xml')
//     sourceSets = [sourceSets.test]
//     ignoreFailures = true
// }

checkstyle {
    toolVersion = '8.45' // Keep this as per your setup
    config = rootProject.resources.text.fromFile('__CRIO__/checkstyle.xml') // Check if this path is correct
    sourceSets = [sourceSets.main, sourceSets.test] // Include both main and test source sets
    ignoreFailures = false // Set to false to ensure build fails on Checkstyle violations
}

task startScript(type:Exec) {
   commandLine './selenium-run.sh'
}

run.dependsOn startScript

test.dependsOn startScript

tasks.withType(Checkstyle) {
    reports {
        xml.required = true
        html.required = true
    }
}

test {
    dependsOn assemble
    mustRunAfter clean
}